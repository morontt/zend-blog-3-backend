<?php

namespace Mtt\BlogBundle\Entity\Repository;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\Query;
use Doctrine\Persistence\ManagerRegistry;
use Mtt\BlogBundle\Entity\Tracking;

/**
 * TrackingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrackingRepository extends ServiceEntityRepository
{
    /**
     * @param ManagerRegistry $registry
     */
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Tracking::class);
    }

    /**
     * @return Query
     */
    public function getListQuery(): Query
    {
        $qb = $this->createQueryBuilder('e');
        $qb
            ->select('e', 'ta', 'ar')
            ->leftJoin('e.trackingAgent', 'ta')
            ->leftJoin('e.post', 'ar')
            ->orderBy('e.id', 'DESC')
        ;

        return $qb->getQuery();
    }

    /**
     * @param string $from
     * @param string $now
     *
     * @return array
     */
    public function getViewCountsInfo(string $from, string $now): array
    {
        $qb = $this->createQueryBuilder('t');
        $qb
            ->select('p.id', 'COUNT(t.id) AS cnt')
            ->innerJoin('t.post', 'p')
            ->innerJoin('t.trackingAgent', 'ta')
            ->andWhere($qb->expr()->gt('t.timeCreated', ':from'))
            ->andWhere($qb->expr()->lte('t.timeCreated', ':now'))
            ->andWhere($qb->expr()->eq('ta.bot', $qb->expr()->literal(false)))
            ->groupBy('p.id')
            ->setParameter('from', $from)
            ->setParameter('now', $now)
        ;

        return $qb->getQuery()->getArrayResult();
    }
}
