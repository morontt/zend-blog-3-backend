services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $dropboxKey: "%dropbox_key%"
            $dropboxSecret: "%dropbox_secret%"

    Mtt\BlogBundle\:
        resource: '../../*'
        exclude: '../../{Entity,Model,Event,OAuth2,Utils,Service/IpInfo/LocationInfo.php,Doctrine/DBAL,DTO,Form}'

    Mtt\BlogBundle\Entity\Repository\:
        resource: '../../Entity/Repository'
        tags: ['doctrine.repository_service']

    Mtt\BlogBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    Mtt\BlogBundle\EventListener\JsonBodyListener:
        calls:
            - [ setTelegramLogger, [ "@monolog.logger.telegram" ]]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 10 }

    Mtt\BlogBundle\EventListener\Doctrine\ArticleUpdatedAtListener:
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    Mtt\BlogBundle\EventListener\Doctrine\MediaFilePictureListener:
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    Mtt\BlogBundle\EventListener\CommentatorCheckListener:
        tags:
            - { name: kernel.event_listener, event: mtt_blog.reply_comment, method: onReply }

    Mtt\BlogBundle\EventListener\CommentGeolocationListener:
        tags:
            - { name: kernel.event_listener, event: mtt_blog.reply_comment, method: onReply }

    Mtt\BlogBundle\EventListener\NewCommentEmailListener:
        tags:
            - { name: kernel.event_listener, event: mtt_blog.reply_comment, method: onReply }

    Mtt\BlogBundle\EventListener\ReplyCommentListener:
        tags:
            - { name: kernel.event_listener, event: mtt_blog.reply_comment, method: onReply }

    Mtt\BlogBundle\EventListener\PygmentsCodeUpdateListener:
        tags:
            - { name: kernel.event_listener, event: mtt_blog.code_updated, method: onUpdate }

    Mtt\BlogBundle\EventListener\UserCommentsListener:
        tags:
            - { name: kernel.event_listener, event: mtt_user.user_updated, method: onUpdate }

    Mtt\BlogBundle\Cron\Daily\DatabaseBackup:
        arguments:
            - "%database_host%"
            - "%database_name%"
            - "%database_user%"
            - "%database_password%"

    Mtt\BlogBundle\Cron\Hourly\TelegramUpdates:
        arguments:
            $adminId: "%telegram_admin_id%"

    mtt_blog.text_processor:
        alias: Mtt\BlogBundle\Service\TextProcessor
        public: true
